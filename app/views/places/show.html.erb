<h1><%= @place.name %></h1>

<%if current_user%>
  <%if current_user.is_admin?%>
    <%= link_to "Edit Place", edit_place_path, class: 'btn btn-primary' %>
    <%= link_to "Delete Place", @place, method: :delete, class: 'btn btn-danger', data: { confirm: 'Are you sure you want to delete this place?' } %>
  <%end%>
<%end%>


<div style='float:top'>
  <h3 style="color:grey">Top rated videos for <%=@place.name%>.üëá</h3>
 <div id="ytplayer"></div>
</div>

<div class="row">
  <div class="col-md-8">
    <p class="lead"><%= @place.description %></p>
    <div>
      <h3>üëçVoteüëé Below or <%= link_to "Add a Video!", new_place_post_path(@place), class: 'btn btn-primary' %></h3>
    </div>
    <% @place.posts.each do |post| %>
      <div class="media">
        <div style='float:top'>
           <%link_obj = get_link_info("#{post.link}")%>
           <%= link_to image_tag(link_obj.images.first.src.to_s, width: '75%'),place_post_path(@place, post) %>
         </div>
        <%= render partial: 'votes/voter', locals: { post: post } %>
        <div class="media-body">
          <h4 class="media-heading">
            <%= link_to post.title, place_post_path(@place, post) %>
          </h4>
          <small>
            submitted <%= time_ago_in_words(post.created_at) %> ago by <%= post.user.name %> <br>
             <%= pluralize(post.comments.count, 'Comment') %>
           </small>
        </div>
      </div>
    <% end %>
  </div>
  <br>
  <div class="col-md-4">
    <%= link_to "New Video", new_place_post_path(@place), class: 'btn btn-primary' %>
  </div>

  <br>
  <br>
  <br>
</div>

<script>
 // Load the IFrame Player API code asynchronously.
 var tag = document.createElement('script');
 tag.src = "https://www.youtube.com/player_api";
 var firstScriptTag = document.getElementsByTagName('script')[0];
 firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

 // Replace the 'ytplayer' element with an <iframe> and
 // YouTube player after the API code downloads.
 var player;
 function onYouTubePlayerAPIReady() {
   player = new YT.Player('ytplayer'
   , {
     height: '500',
     width: '100%',
     playerVars: { 'autoplay': 1},
     videoId: 'UTKAJVXAe_8',
     events: {
              'onReady': onPlayerReady,
              'onStateChange': onPlayerStateChange
            }
   });
 }

// 4. The API will call this function when the video player is ready.
 function onPlayerReady(event) {
   event.target.playVideo();
 }

 // 5. The API calls this function when the player's state changes.
 //    The function indicates that when playing a video (state=1),
 //    the player should play for six seconds and then stop.
 var done = false;
 function onPlayerStateChange(event) {
   if (event.data == YT.PlayerState.PLAYING && !done) {
     playVideoPlaylist()
     done = true;
   }
 }
 function playVideoPlaylist() {
   player.loadPlaylist('<%=topPlaceVideos%>');

 }


 $(document).ready(function(){

   //Check if the current URL contains '#'
   if(document.URL.indexOf("#")==-1)
   {
   // Set the URL to whatever it was plus "#".
   url = document.URL+"#";
   location = "#";

   //Reload the page
   location.reload(true);

   }
   });
</script>
